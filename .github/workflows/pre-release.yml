name: Pre-Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      wants-github-release:
        default: false
        description: Create a GitHub release?
        required: false
        type: boolean

concurrency: pre-release

env:
  DEV_BUILD: true
  # renovate: datasource=docker depName=node versioning=node
  NODE_VERSION: "20.15.1"
  REGISTRY: ghcr.io

jobs:
  versions:
    name: Versions
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Determine versions
        run: echo "RELEASE_VERSION=$(node .scripts/release-version.cjs)" >> $GITHUB_ENV

  qa:
    name: ðŸ”¹ QA
    uses: oliversalzburg/workflows/.github/workflows/qa-nodejs-oci.yml@main
    with:
      artifact-contents: |
        output/
        package.json

  pre-release:
    name: ðŸ”¹ Publish
    needs:
      - qa
      - versions
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      pages: write
      pull-requests: read
      security-events: write
    uses: oliversalzburg/workflows/.github/workflows/publish-oci.yml@main
    with:
      artifact: build-output
      context: .
      image_description: Updates CloudFlare DNS with IP addresses of running Docker containers.
      image_name: ${{ github.repository }}
      image_tag: ${{ needs.versions.outputs.RELEASE_VERSION }}
      image_title: docker-cloudflare-dns
      is_latest: false
      push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
