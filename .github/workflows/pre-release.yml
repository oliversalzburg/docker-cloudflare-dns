name: Pre-Release

on:
  push:
    branches:
      - "main"

concurrency: pre-release

env:
  DEV_BUILD: true
  # renovate: datasource=docker depName=node versioning=node
  NODE_VERSION: "20.14.0"
  REGISTRY: ghcr.io

jobs:
  qa:
    name: ðŸ”¹ QA
    uses: ./.github/workflows/qa.yml

  build:
    name: Build application
    needs: qa
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Load cached dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-node${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ env.NODE_VERSION }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            output/
            package.json
          retention-days: 1

  versions:
    name: Versions
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Determine versions
        run: echo "RELEASE_VERSION=$(node .scripts/release-version.cjs)" >> $GITHUB_ENV

  pre-release:
    concurrency: publish
    name: ðŸ”¹ Publish
    needs:
      - build
      - qa
      - versions
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    uses: ./.github/workflows/oci-build-publish.yml
    with:
      artifact: build-output
      context: .
      image_description: Updates CloudFlare DNS with IP addresses of running Docker containers.
      image_name: ${{ github.repository }}
      image_tag: ${{ needs.versions.outputs.RELEASE_VERSION }}
      image_title: docker-cloudflare-dns
      is_latest: false
      push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
